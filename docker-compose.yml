version: '3'

services:
  # Run the wagtail app
  backend:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile.python
    env_file:
      - ".env"
    command: ./dockerpythonvenv/bin/python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
      - "8001:8001"  # ptvsd port for debugging
    volumes:
      - .:/app:delegated
      - dockerpythonvenv:/app/dockerpythonvenv/:delegated
    depends_on:
      - postgres
      - redis
      - watch-static-files
    links:
      - redis

  # RQ Worker to process donations
  backend-worker:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile.python
    command: ./dockerpythonvenv/bin/python manage.py rqworker default
    volumes:
      - .:/app:delegated
      - dockerpythonvenv:/app/dockerpythonvenv/:delegated
    depends_on:
      - postgres
      - redis
    links:
      - redis

  # Database
  postgres:
    environment:
      - POSTGRES_DB=donate
      - POSTGRES_USER=donate
      # We're only using this setting for local dev!
      - POSTGRES_HOST_AUTH_METHOD=trust
    image: postgres:11
    ports:
      - "5678:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/:delegated

  redis:
    image: redis
    container_name: 'redis'
    ports:
      - "6380:6379"

  # Rebuild static files automatically
  watch-static-files:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile.node
    env_file:
      - .env
    environment:
      # Need to specify the SHELL env var for chokidar
      - SHELL=/bin/sh
      # Force polling because inotify doesn't work on Docker Windows
      - CHOKIDAR_USEPOLLING=1
    command: npm run watch
    volumes:
      - .:/app:delegated
      - node_dependencies:/app/node_modules/:delegated

volumes:
  postgres_data:
  node_dependencies:
  dockerpythonvenv:
